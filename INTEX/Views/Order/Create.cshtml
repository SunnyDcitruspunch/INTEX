@model INTEX.Models.Compound

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div id="create-order" class="form-horizontal">
    <div class="title">
        <h4>Create a New Order</h4>
    </div>
    <hr />
    <div>
        <button class="previous btn btn-primary">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn-primary", @style = "text-decoration: none; color: white" })
        </button>
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group" style="margin-top: 10px;">
        @Html.LabelFor(model => model.CompoundName, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CompoundName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CompoundName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MillQuant, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MillQuant, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MillQuant, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrderTotal, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrderTotal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OrderTotal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateArrived, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateArrived, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateArrived, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReceivedBy, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReceivedBy, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReceivedBy, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QuantitativeFileType, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QuantitativeFileType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuantitativeFileType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QualitativeResults, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QualitativeResults, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QualitativeResults, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QuantitativeResults, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QuantitativeResults, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuantitativeResults, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MTD, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MTD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MTD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-8" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <button class="btn btn-primary">
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn-primary", @style = "text-decoration: none; color: white" })
        </button>
        <button class="btn btn-success" type="submit">Create</button>
    </div>
</div>
}

<style>
    .title {
        text-align: center;
        margin: 3% auto;
    }

    #create-order {
        width: 50%;
        margin: auto;
    }
</style>

